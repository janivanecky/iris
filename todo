=========================
DOING
=========================

=========================
TODO
=========================
- find why stutters
- save button
- screenshot functionality

- instanced text rendering?
- cleanup Render.go
- cleanup main.go
- cleanup UI.go

BUGS
- Font position
- Banding SSAO?
- Stutter when launching goroutine for fetching new colors

MAYBE NOT?
- checkerboard texture
- shader hot reloading
- averaging fps display

=========================
DONE
=========================
28/04/18
- better camera movement
- control over structure of cells
    - repopulate
    - radius control

27/04/18
- colors run in parallel
- colors from generator

26/04/18
- camera top-down look solve

25/04/18
- color pallete UI

24/04/18
- replicate cubes from Draw

23/04/18
- new font
- fix font rendering

22/04/18
- HDR rendering
- color UI element

21/04/18
- full pipeline

30/03/18
- library to different repo/folder

29/03/18
- FPS display
- ditch math.go
- lib files use interfaces to remove dependencies
- clean main.go
- input module handles keys
- ui inputResponsive neater solution
- render.go structs
- render.go cleanup

28/03/18
- application code module

27/03/18
- platform.go (input + GLFW)
- make UI module graphics independent

26/03/18
- vector operations (add, sub, mul)
- propagate window size information to ui etc. (projection matrices)
- implicit initialization instead of {0,0}

24/03/18
- font blurry when scaling


23/03/18
- GLFW DPI awereness

22/03/18
- input switch between UI and not UI
- UI slider
- why smaller text not working?

21/03/18
- UI rendering through panels

20/03/18
- UI rendering through end

18/03/18
- cleanup text rendering
- fancy rect rendering function (position, colors, size)
- simple rect rendering function
- fancy text rendering function (position, pivot, colors)
- simple text rendering function
- simple text rendering loop (static quad and just a single character)


16/03/18
- render quad correctly (with 0 position being top of the screen)

15/03/18
- render quad correctly (-0.5-0.5 -> 0-1)
- render quad with full font texture
- render quad
- render textured quad
- font vertex shader
- font pixel shader

14/03/18
- get some fancy font
- get freetype package
- font package (copy from C++ lib)

13/03/18
- clean up

12/03/18
- snake->camelCase
- cube normals
- diffuse lightning
- mouse input
- projection matrices
- view matrices
- camera movement
- cube mesh
- render cube mesh

11/03/18
- IBO for quad
- simple vertex shader
- simple pixel shader
- quad mesh


=========================
Goal
=========================
Resulting application should enable quickly creating interesting visualizations based on the familiar pattern.

Requires:
- Graphics lib
- Math lib
- Fancy shaders
- The app itself

=========================
Milestones
=========================

*1*
- Rendering of a 3D model with simple phong model

*2*
- Rendering of text and rects

*3*
- Fancy shaders

*4*
- First version of the app - having an option of changing colors/smodels
